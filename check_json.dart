import 'dart:convert';
import 'dart:io';

void main() async {
  try {
    final file = File('assets/curated/my_quotes_approved.json');
    final content = await file.readAsString();
    final jsonData = json.decode(content) as List;
    
    print('‚úÖ JSON —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω');
    print('üìä –í—Å–µ–≥–æ —Ü–∏—Ç–∞—Ç: ${jsonData.length}');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å ID
    final ids = <String>{};
    final duplicates = <String>[];
    
    for (final item in jsonData) {
      final id = item['id'] as String;
      if (ids.contains(id)) {
        duplicates.add(id);
      } else {
        ids.add(id);
      }
    }
    
    if (duplicates.isNotEmpty) {
      print('‚ùå –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è ID: $duplicates');
    } else {
      print('‚úÖ –í—Å–µ ID —É–Ω–∏–∫–∞–ª—å–Ω—ã');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ ID –∏ –∞–≤—Ç–æ—Ä–æ–≤
    final mismatches = <String>[];
    for (final item in jsonData) {
      final id = item['id'] as String;
      final author = item['author'] as String;
      final source = item['source'] as String;
      
      if (id.contains('–•–∞–π–¥–µ–≥–≥–µ—Ä') && author != '–ú–∞—Ä—Ç–∏–Ω –•–∞–π–¥–µ–≥–≥–µ—Ä') {
        mismatches.add('ID: $id, Author: $author, Source: $source');
      }
      if (id.contains('–®–æ–ø–µ–Ω–≥–∞—É—ç—Ä') && author != '–ê—Ä—Ç—É—Ä –®–æ–ø–µ–Ω–≥–∞—É—ç—Ä') {
        mismatches.add('ID: $id, Author: $author, Source: $source');
      }
      if (id.contains('–ù–∏—Ü—à–µ') && author != '–§—Ä–∏–¥—Ä–∏—Ö –ù–∏—Ü—à–µ') {
        mismatches.add('ID: $id, Author: $author, Source: $source');
      }
    }
    
    if (mismatches.isNotEmpty) {
      print('‚ùå –ù–∞–π–¥–µ–Ω—ã –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è ID –∏ –∞–≤—Ç–æ—Ä–æ–≤:');
      for (final mismatch in mismatches) {
        print('   $mismatch');
      }
    } else {
      print('‚úÖ –í—Å–µ ID —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∞–≤—Ç–æ—Ä–∞–º');
    }
    
  } catch (e) {
    print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ JSON: $e');
  }
} 