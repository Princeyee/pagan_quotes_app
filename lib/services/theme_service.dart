// lib/services/theme_service.dart - –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
import 'package:shared_preferences/shared_preferences.dart';
import '../utils/custom_cache.dart'; // –î–û–ë–ê–í–õ–Ø–ï–ú –ò–ú–ü–û–†–¢

class ThemeService {
  static const _key = 'enabled_themes';

  static Future<List<String>> getEnabledThemes() async {
    final prefs = await SharedPreferences.getInstance();
    return prefs.getStringList(_key) ?? ['greece', 'nordic', 'pagan', 'philosophy'];
  }

  static Future<void> setEnabledThemes(List<String> themes) async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setStringList(_key, themes);
    
    // –°–ë–†–ê–°–´–í–ê–ï–ú –ö–≠–® –ï–ñ–ï–î–ù–ï–í–ù–´–• –¶–ò–¢–ê–¢ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç–µ–º
    await CustomCache.prefs.clearDailyQuotes();
    print('üîÑ –ö—ç—à –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ü–∏—Ç–∞—Ç –æ—á–∏—â–µ–Ω –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã —Ç–µ–º');
  }

  static Future<void> toggleTheme(String themeId) async {
    final current = await getEnabledThemes();
    if (current.contains(themeId)) {
      if (current.length == 1) return; // –∑–∞–ø—Ä–µ—â–∞–µ–º –æ—Ç–∫–ª—é—á–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ç–µ–º—É
      current.remove(themeId);
    } else {
      current.add(themeId);
    }
    await setEnabledThemes(current); // –ò—Å–ø–æ–ª—å–∑—É–µ–º setEnabledThemes –¥–ª—è —Å–±—Ä–æ—Å–∞ –∫—ç—à–∞
  }

  static Future<bool> isEnabled(String themeId) async {
    final current = await getEnabledThemes();
    return current.contains(themeId);
  }
<<<<<<< HEAD
=======

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ–π —Ç–µ–º—ã
>>>>>>> 8252fec (Assistant checkpoint: –î–æ–±–∞–≤–ª–µ–Ω –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ–π —Ç–µ–º—ã)
  static Future<String> getRandomActiveTheme() async {
    final enabledThemes = await getEnabledThemes();
    if (enabledThemes.isEmpty) {
      return 'greece'; // fallback
    }
    enabledThemes.shuffle();
    return enabledThemes.first;
  }
}